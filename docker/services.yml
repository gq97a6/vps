name: services

include:
  - /own/docker/networks.yml

services:
  portainer:
    container_name: portainer
    hostname: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    networks:
      - portainer-nw
    ports:
      - 10.1.0.1:100:9000
    volumes:
      - ./storage/portainer:/data
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    security_opt:
      - no-new-privileges:true

  mysql:
    container_name: mysql
    hostname: mysql
    image: mysql
    restart: unless-stopped
    networks:
      - mysql-nw
    ports:
      - 10.1.0.1:3306:3306
    volumes:
      - ./storage/mysql/mysql:/var/lib/mysql
      - ./storage/mysql/my.cnf:/etc/my.cnf

  mongodb:
    container_name: mongodb
    hostname: mongodb
    image: mongo
    restart: unless-stopped
    networks:
      - mongodb-nw
    ports:
      - 10.1.0.1:27017:27017
    volumes:
      - ./storage/mongodb/db:/data/db
      - ./storage/mongodb/configdb:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}

  mongoexpress:
    container_name: mongoexpress
    hostname: mongoexpress
    image: mongo-express
    restart: unless-stopped
    networks:
      - mongodb-nw
    ports:
      - 10.1.0.1:400:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://root:${MONGO_ROOT_PASSWORD}@mongodb:27017/
      ME_CONFIG_BASICAUTH: false

  phpmyadmin:
    container_name: phpmyadmin
    hostname: phpmyadmin
    image: phpmyadmin
    restart: unless-stopped
    networks:
      - mysql-nw
    ports:
      - 10.1.0.1:200:80
    volumes:
      - ./storage/phpmyadmin:/etc/phpmyadmin
    extra_hosts:
      - host:host-gateway

  nginx:
    container_name: nginx
    hostname: nginx
    image: nginx
    restart: unless-stopped
    networks:
      - nginx-nw
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./storage/nginx:/etc/nginx
    tty: true
    stdin_open: true

  mosquitto:
    container_name: mosquitto
    hostname: mosquitto
    image: eclipse-mosquitto
    restart: unless-stopped
    networks:
      - mosquitto-nw
    ports:
      - 1883:1883
      - 8883:8883
      - 8884:8884
      - 8885:8885
      - 8080:8080
      - 8081:8081
    volumes:
      - ./storage/mosquitto/config:/mosquitto/config
      - ./storage/mosquitto/data:/mosquitto/data
      - ./storage/mosquitto/log:/mosquitto/log
    tty: true
    stdin_open: true

  syncthing:
    container_name: syncthing
    hostname: syncthing
    image: lscr.io/linuxserver/syncthing:latest
    restart: unless-stopped
    networks:
      - syncthing-nw
    ports:
      - 10.1.0.1:300:8384
    volumes:
      - ./storage/syncthing/config:/config
      - ./storage/syncthing/data:/data
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Etc/UTC

  chatgpt:
    container_name: chatgpt
    hostname: chatgpt
    image: yidadaa/chatgpt-next-web
    restart: unless-stopped
    networks:
      - nginx-nw
    environment:
      OPENAI_API_KEY: ${GPT_OPENAI_API_KEY}
      CODE: ${GPT_CODE}
      HIDE_USER_API_KEY: 1
      CUSTOM_MODELS: -all,chatgpt-4o-latest,gpt-4o-mini,o1-preview,o1-mini